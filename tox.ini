[tox]
requires =
    tox
env_list =
    type
    lint
    format
    security
    install_package
    docs_build
    py310,py311,py312

[testenv]
description = General unit testing environment.
setenv =
    COVERAGE_OMIT = */tests/*,*/__init__.py
deps =
    coverage
commands =
    coverage run --branch --omit {env:COVERAGE_OMIT} -m unittest discover -s fakernaija/tests

[testenv:py310]
description = Test with Python 3.10
basepython = python3.10

[testenv:py311]
description = Test with Python 3.11
basepython = python3.11

[testenv:py312]
description = Test with Python 3.12
basepython = python3.12
commands =
    coverage erase
    coverage run --branch --omit {env:COVERAGE_OMIT} -m unittest discover -s fakernaija/tests
    coverage report --omit {env:COVERAGE_OMIT} --fail-under=70
    coverage html --omit {env:COVERAGE_OMIT}

[testenv:type]
description = Run type checks with mypy.
deps =
    mypy
commands =
    mypy {posargs:fakernaija}

[testenv:lint]
description = Check for linting issues using Ruff.
deps =
    ruff
commands =
    ruff check --exclude=docs/* --select I

[testenv:format]
description = Format code using Ruff built-in formatter.
deps =
    ruff
commands =
    ruff format

[testenv:security]
description = Run security checks using Bandit.
deps =
    bandit
commands =
    # B311: Allow pseudo-random generators
    bandit --skip B311 -r fakernaija

[testenv:install_package]
description = Check if the package installs correctly.
skip_install = true
commands =
    pip install --no-deps .

[testenv:docs_build]
description = Build the HTML documentation using Sphinx.
deps =
    -rdocs/requirements.txt
commands =
    sphinx-build -M html docs/source/ docs/build/

[flake8]
extend-ignore =
    # Ignore checking line length
    E501
