[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "fakernaija"
authors = [
    {name = "Seyi Pythonian", email = "seyipythonian@gmail.com"},
]
description = "A Python package to generate random Nigerian-specific data for you."
readme = "README.md"
requires-python = ">=3.10"
keywords = ["faker", "data", "generator", "mock", "nigeria", "naija", "test"]
license = {text = "MIT License"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Environment :: Console",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing",
    "Topic :: Utilities",
]
dependencies = [
    "click",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "bandit==1.7.9",
    "coverage==7.6.1",
    "mypy==1.11.1",
    "pre-commit==3.8.0",
    "ruff==0.6.0",
    "tox==4.18.0"
]

[project.urls]
Homepage = "https://github.com/Pythonian/fakernaija"
Documentation = "https://fakernaija.readthedocs.io/"
"Source Code" = "https://github.com/Pythonian/fakernaija"
"Bug Tracker" = "https://github.com/Pythonian/fakernaija/issues"
Changelog = "https://github.com/Pythonian/fakernaija/blob/master/CHANGELOG.md"

[project.scripts]
naija = "fakernaija.cli:cli"

[tool.setuptools.dynamic]
version = {attr = "fakernaija.__version__"}

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
select = ["ALL"]

# Rules to ignore
ignore = [
    "E501", # Avoid enforcing line-length violations
    "S311", # Avoid enforcing standard pseudo-random generators
    "ANN101", # Avoid enforcing type annotation for `self` in method
    "FBT001", # Avoid enforcing boolean-typed positional argument
    "FBT002", # Avoid enforcing boolean default positional argument
    "S101", # Use of `assert` detected
    "PT027", # Avoid suggesting pytest.raises
    "PT009", # Avoid suggesting assert as against using unittest-style assertions
    "C901", # Ignore raising Complex functions warning
    "PLR0912", # Ignore Too many branches warning
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]

# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

[tool.ruff.lint.extend-per-file-ignores]
# Ignore missing docstring warning for __init__.py files
"__init__.py" = ["D104"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.mypy]
disallow_subclassing_any = true
disallow_incomplete_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = false
allow_redefinition = true
pretty = true
follow_imports = "silent"
ignore_missing_imports = true
show_error_codes = true
show_column_numbers = true
python_version = "3.10"
